webpackJsonp([5],{uc0N:function(s,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var v={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"content"},[e("hr"),s._v(" "),e("h2",{attrs:{id:"name%3A-2018-12-19-this-0layout%3A-posttitle%3A-%22%E4%BB%8E-ecmascript-%E8%A7%84%E8%8C%83%E8%A7%A3%E8%AF%BB-this%22date%3A-2018-12-19categories%3A-javascripttags%3A-%5Btutorial%2Cjavascript%5Dcoverimg%3A-%22https%3A%2F%2Fsource.unsplash.com%2Fmfrtdt7nqwg%22info%3A-%22%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E5%9F%BA%E4%BA%8E%E5%86%B4%E7%BE%BD%E5%A4%A7%E5%A4%A7%E7%9A%84javascript-%E6%B7%B1%E5%85%A5%E4%B9%8B%E4%BB%8E-ecmascript-%E8%A7%84%E8%8C%83%E8%A7%A3%E8%AF%BB-this%22"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#name%3A-2018-12-19-this-0layout%3A-posttitle%3A-%22%E4%BB%8E-ecmascript-%E8%A7%84%E8%8C%83%E8%A7%A3%E8%AF%BB-this%22date%3A-2018-12-19categories%3A-javascripttags%3A-%5Btutorial%2Cjavascript%5Dcoverimg%3A-%22https%3A%2F%2Fsource.unsplash.com%2Fmfrtdt7nqwg%22info%3A-%22%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E5%9F%BA%E4%BA%8E%E5%86%B4%E7%BE%BD%E5%A4%A7%E5%A4%A7%E7%9A%84javascript-%E6%B7%B1%E5%85%A5%E4%B9%8B%E4%BB%8E-ecmascript-%E8%A7%84%E8%8C%83%E8%A7%A3%E8%AF%BB-this%22","aria-hidden":"true"}},[s._v("#")]),s._v(' name: 2018-12-19-this-0\nlayout: post\ntitle: "从 ECMAScript 规范解读 this"\ndate:  2018-12-19\ncategories: JavaScript\ntags: [Tutorial,JavaScript]\ncoverimg: "https://source.unsplash.com/MFRtdt7nQwg"\ninfo: "这篇文章基于冴羽大大的JavaScript 深入之从 ECMAScript 规范解读 this"')]),s._v(" "),e("blockquote",[e("p",[s._v("本文"),e("a",{attrs:{href:"https://juejin.im/post/5c1c5bfcf265da614c4cc40e"}},[s._v("掘金同步连接")])])]),s._v(" "),e("h3",{attrs:{id:"%E5%89%8D%E8%A8%80"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E5%89%8D%E8%A8%80","aria-hidden":"true"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),e("p",[s._v("这篇文章的产生，是基于冴羽大大的"),e("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/7"}},[s._v("JavaScript 深入之从 ECMAScript 规范解读 this")]),s._v("的思考，这是"),e("a",{attrs:{href:"https://juejin.im/post/58eee3eda0bb9f006a7eea12"}},[s._v("对应掘金链接")]),s._v("，文中详细的论述了前因后果，建议各位都可以去了解一下，很有帮助，并且这篇文章在写作时，也有冴羽大大的帮助，再次表示感谢~")]),s._v(" "),e("p",[s._v("文中的 "),e("code",[s._v("ES5")]),s._v(" 规范是参考 "),e("a",{attrs:{href:"https://github.com/yanhaijing"}},[s._v("颜海镜大大")]),s._v(" 的译本，也在这里表示感谢。")]),s._v(" "),e("p",[s._v("那为什么还有这篇文章呢？因为很多的同学在冴羽大大的博客下评论没有看懂，我也是其中的一员，于是我决定要弄明白为什么，现在也把我的一些整理分享出来，希望对大家也有帮助。")]),s._v(" "),e("p",[s._v("再啰嗦一句，对于知道了各种情况下 "),e("code",[s._v("this")]),s._v(" 如何判断的同学来说，这篇文章并不会告诉你如何进行 "),e("code",[s._v("this")]),s._v(" 指向的判断，更多的是知道为什么这样判断，不满足于知其然，更知其所以然。")]),s._v(" "),e("h3",{attrs:{id:"%E4%B8%80.-%E4%BB%8E-reference-type-(%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B)%E5%BC%80%E5%A7%8B%EF%BC%9A"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E4%B8%80.-%E4%BB%8E-reference-type-(%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B)%E5%BC%80%E5%A7%8B%EF%BC%9A","aria-hidden":"true"}},[s._v("#")]),s._v(" 一. 从 "),e("code",[s._v("Reference Type")]),s._v(" (引用类型)开始：")]),s._v(" "),e("p",[e("code",[s._v("Reference Type")]),s._v(" ：引用类型。在 "),e("a",{attrs:{href:"https://es5.github.io/#x15.1"}},[s._v("ES5 文档标准")]),s._v("中，将"),e("code",[s._v("Reference")]),s._v(" 描述为 "),e("code",[s._v("a resolved name binding")])]),s._v(" "),e("p",[e("a",{attrs:{href:"http://yanhaijing.com/es5/#80"}},[s._v("颜大的 ES5 译本")]),s._v(" 中，译为已解决的命名绑定。")]),s._v(" "),e("ol",[e("li",[e("p",[e("code",[s._v("resolved")]),s._v(" 翻译为 "),e("code",[s._v("已完成")])])]),s._v(" "),e("li",[e("p",[e("code",[s._v("name binding")]),s._v(" 翻译为 "),e("code",[s._v("命名绑定")]),s._v(" 没有任何问题，如果有后端语言经验的同学可能更好理解。")])])]),s._v(" "),e("p",[s._v("那我们再解释下命名绑定：绑定是有双方的，把 "),e("code",[s._v("命名")]),s._v(" ，也就是 "),e("code",[s._v("我们取的名字")]),s._v(" ，要绑定在 "),e("code",[s._v("某个东西")]),s._v(" 上面，换言之，就是用 "),e("code",[s._v("名字")]),s._v(" 来描述了一个什么 "),e("code",[s._v("东西")]),s._v(" 。")]),s._v(" "),e("h4",{attrs:{id:"%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E7%94%A8%E4%B8%80%E4%B8%AA%E5%90%8D%E5%AD%97%E6%9D%A5%E6%8F%8F%E8%BF%B0%EF%BC%8C%E5%AE%83%E6%B2%A1%E6%9C%89%E8%87%AA%E5%B7%B1%E6%9C%AC%E8%BA%AB%E7%9A%84%E5%90%8D%E5%AD%97%E5%90%97%3F"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E7%94%A8%E4%B8%80%E4%B8%AA%E5%90%8D%E5%AD%97%E6%9D%A5%E6%8F%8F%E8%BF%B0%EF%BC%8C%E5%AE%83%E6%B2%A1%E6%9C%89%E8%87%AA%E5%B7%B1%E6%9C%AC%E8%BA%AB%E7%9A%84%E5%90%8D%E5%AD%97%E5%90%97%3F","aria-hidden":"true"}},[s._v("#")]),s._v(" 为什么需要用一个名字来描述，它没有自己本身的名字吗?")]),s._v(" "),e("p",[s._v("举个例子:\n现在我们有一个对象："),e("code",[s._v("time")]),s._v(" ，然后他有三个属性:")]),s._v(" "),e("pre",{staticClass:"hljs"},[e("code",[s._v(" time {\n   "),e("span",{staticClass:"hljs-attr"},[s._v("second")]),s._v(": "),e("span",{staticClass:"hljs-number"},[s._v("32")]),s._v(",\n   "),e("span",{staticClass:"hljs-attr"},[s._v("minute")]),s._v(": "),e("span",{staticClass:"hljs-number"},[s._v("12")]),s._v(",\n   "),e("span",{staticClass:"hljs-attr"},[s._v("hour")]),s._v(": "),e("span",{staticClass:"hljs-number"},[s._v("10")]),s._v("\n }\n")])]),s._v(" "),e("h4",{attrs:{id:"%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%AD%98%E5%9C%A8%E4%BB%80%E4%B9%88%E5%9C%B0%E6%96%B9%E7%9A%84%EF%BC%9F"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E8%BF%99%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%AD%98%E5%9C%A8%E4%BB%80%E4%B9%88%E5%9C%B0%E6%96%B9%E7%9A%84%EF%BC%9F","aria-hidden":"true"}},[s._v("#")]),s._v(" 这个对象是存在什么地方的？")]),s._v(" "),e("p",[s._v("我们定义完成后，它必须存在于某一个地方，才能在后面的代码中获取到它。")]),s._v(" "),e("p",[s._v("存在哪由 "),e("code",[s._v("time")]),s._v(" 本身的特性来决定，因为它是一个对象，内部的属性是可以添加也可以减少的，换言之，"),e("strong",[s._v("它的大小并不固定")]),s._v("。所以我们把它存在了 "),e("strong",[e("code",[s._v("堆")])]),s._v(" 里面。")]),s._v(" "),e("p",[s._v("那"),e("strong",[s._v("如果它的大小固定")]),s._v("呢？例如 "),e("code",[s._v("JavaScript")]),s._v(" 中的 6 种基本类型的值 ："),e("code",[s._v("null")]),s._v("，"),e("code",[s._v("undefined")]),s._v("，"),e("code",[s._v("Boolean")]),s._v("，"),e("code",[s._v("Number")]),s._v(" ，"),e("code",[s._v("String")]),s._v(" ， "),e("code",[s._v("Symbol")]),s._v("，既然大小固定，我们就可以放在 "),e("strong",[e("code",[s._v("栈")])]),s._v(" 里面。")]),s._v(" "),e("br"),s._v(" "),e("h4",{attrs:{id:"%E5%A0%86%E6%A0%88%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A6%81%E5%88%86%E5%BC%80%E6%94%BE%E5%91%A2%EF%BC%9F"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E5%A0%86%E6%A0%88%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A6%81%E5%88%86%E5%BC%80%E6%94%BE%E5%91%A2%EF%BC%9F","aria-hidden":"true"}},[s._v("#")]),s._v(" 堆栈是什么？为什么不同类型的数据要分开放呢？")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("栈")]),s._v("：程序运行时系统分配的一小块内存，大小在编译期时由编译器参数决定。")]),s._v(" "),e("li",[e("code",[s._v("堆")]),s._v("：可以理解为当前可以使用的空闲内存，其大小是需要代码编写的人员自己去申请和释放。（在 JS 中，V8 下有自动垃圾回收机制不需要我们自己操作）\n[这里只做简单解释，有需要可以自行 Google 更多信息]")])]),s._v(" "),e("br"),s._v(" "),e("h4",{attrs:{id:"%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%AD%98%E5%9C%A8%E5%A0%86%E4%B8%AD%EF%BC%8C%E5%92%8C%E4%BE%8B%E5%AD%90%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB%EF%BC%9F"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%AD%98%E5%9C%A8%E5%A0%86%E4%B8%AD%EF%BC%8C%E5%92%8C%E4%BE%8B%E5%AD%90%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB%EF%BC%9F","aria-hidden":"true"}},[s._v("#")]),s._v(" 引用类型存在堆中，和例子有什么关系？")]),s._v(" "),e("p",[s._v("Okay。如果你已经理解了我们的 "),e("code",[s._v("time")]),s._v(" 是存在堆中的，那就很好理解了。现在我要用到 "),e("code",[s._v("time")]),s._v(" 里面 "),e("code",[s._v("second")]),s._v("属性的值， 我们都知道用 "),e("code",[s._v("time.second")]),s._v(" 就可以拿到，但是为什么 "),e("code",[s._v("time.second")]),s._v(" 或者 "),e("code",[s._v("time[’second’]")]),s._v(" 就可以访问到 "),e("code",[s._v("second")]),s._v(" 属性的值呢？")]),s._v(" "),e("p",[s._v("看起来这个问题很蠢是不是，哈哈，但是仔细想想，按理来说：这个值是在内存里面的一小块上面，那我们需要找到这一块内存，才能取到这个值啊。")]),s._v(" "),e("p",[s._v("现在就很好理解了。那其实 "),e("code",[s._v("time.second")]),s._v(" 或者 "),e("code",[s._v("time[’second’]")]),s._v(" 他们是和内存里面的真正存放 "),e("code",[s._v("second")]),s._v(" 的值那个内存位置 是绑定在一起的。只要你用到了 "),e("code",[s._v("time.second")]),s._v(" 或者 "),e("code",[s._v("time[’second’]")]),s._v("，那编译器就找到，哦，这就是存在"),e("code",[s._v("xxxxx")]),s._v(" 地址里面的值也就是 "),e("code",[s._v("32")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"%E4%BA%8C.-reference-type-%E5%92%8C-this-%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB%EF%BC%9F"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E4%BA%8C.-reference-type-%E5%92%8C-this-%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB%EF%BC%9F","aria-hidden":"true"}},[s._v("#")]),s._v(" 二. "),e("code",[s._v("Reference Type")]),s._v(" 和 "),e("code",[s._v("this")]),s._v(" 有什么关系？")]),s._v(" "),e("p",[e("code",[s._v("this")]),s._v(" 在 "),e("code",[s._v("Javascript")]),s._v(" 中一直是一个初学者难以理解的点，有一些甚至写了 2 年的项目也没搞明白为什么 "),e("code",[s._v("this")]),s._v(" 有这样那样的不同。")]),s._v(" "),e("p",[s._v("这里我们先不从使用的场景上来看 "),e("code",[s._v("this")]),s._v(" 的指向，还是回归到本源。")]),s._v(" "),e("p",[s._v("站在编译器的角度，是怎么样去理解 "),e("code",[s._v("this")]),s._v(" 指向呢？因为"),e("code",[s._v("this")]),s._v(" 的指向的判断，常常发生于"),e("strong",[s._v("函数的调用中")]),s._v(",那我们就来看看"),e("a",{attrs:{href:"https://es5.github.io/#x15.1"}},[s._v("ES5 文档标准")]),s._v("中的 "),e("code",[s._v("11.2.3 Function Calls")]),s._v(" (函数调用)。")]),s._v(" "),e("p",[s._v("一共分为 8 个步骤：")]),s._v(" "),e("pre",{staticClass:"hljs"},[e("code",[s._v("\n"),e("span",{staticClass:"hljs-number"},[s._v("1.")]),s._v(" Let ref be the result "),e("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" evaluating MemberExpression.\n\n"),e("span",{staticClass:"hljs-number"},[s._v("2.")]),s._v(" Let func be GetValue(ref).\n\n"),e("span",{staticClass:"hljs-number"},[s._v("3.")]),s._v(" Let argList be the result "),e("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" evaluating Arguments, producing an internal list "),e("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" argument values (see "),e("span",{staticClass:"hljs-number"},[s._v("11.2")]),e("span",{staticClass:"hljs-number"},[s._v(".4")]),s._v(").\n\n"),e("span",{staticClass:"hljs-number"},[s._v("4.")]),s._v(" If Type(func) is not "),e("span",{staticClass:"hljs-built_in"},[s._v("Object")]),s._v(", "),e("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" a "),e("span",{staticClass:"hljs-built_in"},[s._v("TypeError")]),s._v(" exception.\n\n"),e("span",{staticClass:"hljs-number"},[s._v("5.")]),s._v(" If IsCallable(func) is "),e("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(", "),e("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" a "),e("span",{staticClass:"hljs-built_in"},[s._v("TypeError")]),s._v(" exception.\n\n"),e("span",{staticClass:"hljs-number"},[s._v("6.")]),s._v(" If Type(ref) is Reference, then\n\n    a.If IsPropertyReference(ref) is "),e("span",{staticClass:"hljs-literal"},[s._v("true")]),s._v(", then\n    i.Let thisValue be GetBase(ref).\n\n    b. Else, the base "),e("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" ref is an Environment Record\n    i.Let thisValue be the result "),e("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" calling the Implicit This Value concrete method "),e("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" GetBase(ref).\n\n"),e("span",{staticClass:"hljs-number"},[s._v("7.")]),s._v(" Else, Type(ref) is not Reference.\n\n    a.Let thisValue be "),e("span",{staticClass:"hljs-literal"},[s._v("undefined")]),s._v(".\n\n"),e("span",{staticClass:"hljs-number"},[s._v("8.")]),s._v(" Return the result "),e("span",{staticClass:"hljs-keyword"},[s._v("of")]),s._v(" calling the [[Call]] internal method on func, providing thisValue "),e("span",{staticClass:"hljs-keyword"},[s._v("as")]),s._v(" the "),e("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(" value and providing the list argList "),e("span",{staticClass:"hljs-keyword"},[s._v("as")]),s._v(" the argument values.\n")])]),s._v(" "),e("p",[s._v("我就不翻译了，因为就算翻译出来你可能也读得很累，那么我们用图来看下这个流程会更加直观。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/12/21/167cec74a1455c7b?w=1075&h=1615&f=jpeg&s=328980",alt:""}})]),s._v(" "),e("p",[s._v("我已经把最关键的几个步骤都标红了，如果在第三步返回的 "),e("code",[s._v("func")]),s._v(" 无法通过 "),e("code",[s._v("5")]),s._v(" 的判断的话，根本就没有讨论 "),e("code",[s._v("this")]),s._v(" 指向的必要。")]),s._v(" "),e("p",[s._v("所以我们重点看：这个里面最关键的点，第 "),e("code",[s._v("2")]),s._v(" , "),e("code",[s._v("6")]),s._v(" , "),e("code",[s._v("7")]),s._v(" 步骤：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("第 "),e("code",[s._v("2")]),s._v(" 步："),e("strong",[s._v("计算 "),e("code",[s._v("MemberExpression")]),s._v(" 的值并且赋值给 "),e("code",[s._v("Ref")])]),s._v(":\n也就是计算 "),e("code",[s._v("()")]),s._v(" 左边的内容的结果，并赋值给 "),e("code",[s._v("Ref")]),s._v("。换句话说: "),e("code",[s._v("Ref")]),s._v(" 就是对于 "),e("code",[s._v("()")]),s._v(" 左边的内容进行计算之后的引用。\n"),e("br")])]),s._v(" "),e("li",[e("p",[s._v("第 "),e("code",[s._v("6")]),s._v(" 步："),e("strong",[s._v("判断 ref 是否为 Reference 类型")]),s._v(":\n这个没什么好说的。\n"),e("br")])]),s._v(" "),e("li",[e("p",[s._v("第 "),e("code",[s._v("7")]),s._v(" 步："),e("strong",[s._v("判断 ref 是否是属性引用类型")]),s._v(":\n官方解释：\n通过执行"),e("code",[s._v("IsPropertyReference(V)")]),s._v("来判断的，如果基值是个对象或 "),e("code",[s._v("HasPrimitiveBase(V)")]),s._v(" 是 true，那么返回 true；否则返回 false。\n"),e("code",[s._v("HasPrimitiveBase(V)")]),s._v("：如果基值是 Boolean, String, Number，那么返回 true。\n换成大白话，"),e("strong",[s._v("取决于"),e("code",[s._v("Ref")]),s._v("这个引用是基于谁的？")]),s._v(" 如果它基于一个"),e("code",[s._v("对象")]),s._v(" 或者 "),e("code",[s._v("Boolean")]),s._v(", "),e("code",[s._v("String")]),s._v(", "),e("code",[s._v("Number")]),s._v("那就返回 "),e("code",[s._v("true")]),s._v(" 否则返回 "),e("code",[s._v("false")]),s._v("。")])])]),s._v(" "),e("p",[s._v("OK 看到这里，估计你也有些累，但是最关键的部分在下面。")]),s._v(" "),e("h3",{attrs:{id:"%E4%B8%89.-%E5%9B%9E%E8%BF%87%E5%A4%B4%E6%9D%A5%E7%9C%8B-this-%E7%9A%84-n-%E7%A7%8D%E6%83%85%E5%86%B5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E4%B8%89.-%E5%9B%9E%E8%BF%87%E5%A4%B4%E6%9D%A5%E7%9C%8B-this-%E7%9A%84-n-%E7%A7%8D%E6%83%85%E5%86%B5","aria-hidden":"true"}},[s._v("#")]),s._v(" 三. 回过头来看 "),e("code",[s._v("this")]),s._v(" 的 N 种情况")]),s._v(" "),e("h4",{attrs:{id:"%E7%9B%B4%E6%8E%A5%E8%B0%83%E7%94%A8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E7%9B%B4%E6%8E%A5%E8%B0%83%E7%94%A8","aria-hidden":"true"}},[s._v("#")]),s._v(" 直接调用")]),s._v(" "),e("pre",{staticClass:"hljs"},[e("code",[e("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" a = "),e("span",{staticClass:"hljs-string"},[s._v("'m'")]),s._v(";\n"),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("test")]),s._v("("),e("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),e("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),e("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".a);\n}\ntest(); "),e("span",{staticClass:"hljs-comment"},[s._v("// m")]),s._v("\n")])]),s._v(" "),e("p",[s._v("我们用刚刚所看到的 "),e("code",[s._v("3")]),s._v(" 个步骤来判断下 "),e("code",[s._v("this")]),s._v(":")]),s._v(" "),e("ol",[e("li",[e("code",[s._v("test()")]),s._v(" 的 "),e("code",[s._v("Ref")]),s._v(" 就是 "),e("code",[s._v("test")]),s._v("引用，它关联到在内存中存储了"),e("code",[s._v("test()")]),s._v("的某一片段。")]),s._v(" "),e("li",[s._v("判断 "),e("code",[s._v("test()")]),s._v(" 是否为引用类型 => "),e("code",[s._v("true")])]),s._v(" "),e("li",[s._v("判断 "),e("code",[s._v("Ref")]),s._v(" 是否是属性引用类型 => "),e("code",[s._v("false")]),s._v("，它并没有定义在某个引用类型的内部。")]),s._v(" "),e("li",[s._v("进入到图中的第九个步骤："),e("code",[s._v("this = ImplicitThisValue(Ref)")]),s._v(" ，在 "),e("code",[s._v("Environment Records")]),s._v(" 下返回 "),e("code",[s._v("undefined")]),s._v(" ,而在非严格模式下，浏览器会把 "),e("code",[s._v("this")]),s._v(" 指向 "),e("code",[s._v("window")])])]),s._v(" "),e("p",[s._v("说起来很麻烦，其实理解起来很简单。")]),s._v(" "),e("h4",{attrs:{id:"%E5%9C%A8%E5%AF%B9%E8%B1%A1%E5%86%85%E9%83%A8%E8%B0%83%E7%94%A8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E5%9C%A8%E5%AF%B9%E8%B1%A1%E5%86%85%E9%83%A8%E8%B0%83%E7%94%A8","aria-hidden":"true"}},[s._v("#")]),s._v(" 在对象内部调用")]),s._v(" "),e("pre",{staticClass:"hljs"},[e("code",[e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("test")]),s._v("("),e("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),e("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),e("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".a);\n}\n"),e("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" parent = {\n  "),e("span",{staticClass:"hljs-attr"},[s._v("a")]),s._v(": "),e("span",{staticClass:"hljs-string"},[s._v("'s'")]),s._v(",\n  "),e("span",{staticClass:"hljs-attr"},[s._v("test")]),s._v(": test\n};\nparent.test(); "),e("span",{staticClass:"hljs-comment"},[s._v("// s")]),s._v("\n")])]),s._v(" "),e("ol",[e("li",[e("code",[s._v("parent.test()")]),s._v(" 的 "),e("code",[s._v("Ref")]),s._v(" 就是 "),e("code",[s._v("parent.test")]),s._v("引用，它关联到在内存中存储了"),e("code",[s._v("test()")]),s._v("的某一片段。")]),s._v(" "),e("li",[s._v("判断 "),e("code",[s._v("parent.test()")]),s._v(" 是否为引用类型 => "),e("code",[s._v("true")])]),s._v(" "),e("li",[s._v("判断 "),e("code",[s._v("Ref")]),s._v(" 是否是属性引用类型 => "),e("code",[s._v("true")])]),s._v(" "),e("li",[s._v("进入到图中的第八个步骤："),e("code",[s._v("this = GetBase(Ref)")]),s._v(" 那这个"),e("code",[s._v("test()")]),s._v(" 方法是基于谁呢？很明显就是 "),e("code",[s._v("parent")]),s._v(",所以 "),e("code",[s._v("this")]),s._v(" 指向 "),e("code",[s._v("parent")])])]),s._v(" "),e("h4",{attrs:{id:"new-%E5%85%B3%E9%94%AE%E5%AD%97"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new-%E5%85%B3%E9%94%AE%E5%AD%97","aria-hidden":"true"}},[s._v("#")]),s._v(" new 关键字")]),s._v(" "),e("pre",{staticClass:"hljs"},[e("code",[e("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" a = "),e("span",{staticClass:"hljs-string"},[s._v("'k'")]),s._v(";\n"),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("Foo")]),s._v("("),e("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),e("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),e("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(");\n}\n"),e("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" c = "),e("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Foo();\nc.a = "),e("span",{staticClass:"hljs-string"},[s._v("'s'")]),s._v("\n")])]),s._v(" "),e("p",[e("code",[s._v("new")]),s._v(" 关键字调用，区别于一般的函数调用，大家可以看下"),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new"}},[s._v("MDN 上的解释")]),s._v(",明确的指出了")]),s._v(" "),e("ol",[e("li",[s._v("一个继承自 Foo.prototype 的新对象被创建。")]),s._v(" "),e("li",[s._v("使用指定的参数调用构造函数 Foo ，并将 this 绑定到新创建的对象")])]),s._v(" "),e("p",[s._v("如果你仍旧想从规范的角度来解释，建议你读一下"),e("a",{attrs:{href:"https://es5.github.io/#x11.2.2"}},[s._v("ES5 规范:11.2.2 The new Operator")]),s._v(" 以及关联的 "),e("a",{attrs:{href:"https://es5.github.io/#x8.7.1"}},[s._v("ES5 规范:8.7.1 GetValue (V)")]),s._v(" 我反复了读了很多遍，但是没有发现如何从规范的角度去解释 "),e("code",[s._v("this")]),s._v(" 的指向问题，最后也是请教了"),e("a",{attrs:{href:"https://juejin.im/user/58e4b9b261ff4b006b3227f4"}},[s._v("冴羽大大")]),s._v("才知道 "),e("code",[s._v("new")]),s._v(" 可能在底层有明确指定 "),e("code",[s._v("this")]),s._v("的过程，不适合用这样的方式解读，但是，如果你有了更好的答案，很欢迎一起讨论~")]),s._v(" "),e("p",[s._v("既然明白了"),e("code",[s._v("this")]),s._v(" 指向的是 "),e("code",[s._v("c")]),s._v(" 那么输出的是 {a : 's'}")]),s._v(" "),e("h4",{attrs:{id:"%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0","aria-hidden":"true"}},[s._v("#")]),s._v(" 箭头函数")]),s._v(" "),e("pre",{staticClass:"hljs"},[e("code",[e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),e("span",{staticClass:"hljs-title"},[s._v("Foo")]),s._v("("),e("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  "),e("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[s._v("()")]),s._v(" =>")]),s._v(" {\n    "),e("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[s._v("()")]),s._v(" =>")]),s._v(" {\n      "),e("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log("),e("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(");\n    };\n  };\n}\n"),e("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(Foo()()());\n")])]),s._v(" "),e("p",[s._v("和 "),e("code",[s._v("new")]),s._v(" 一样箭头函数也是一个特例，但是箭头函数同样可以从对应的规范中找到 "),e("code",[s._v("this")]),s._v(" 的答案：")]),s._v(" "),e("p",[s._v("建议参考"),e("a",{attrs:{href:"https://www.ecma-international.org/ecma-262/6.0/#sec-arrow-function-definitions-runtime-semantics-evaluation"}},[s._v("ES6 规范-箭头函数-evaluation")]),s._v("里面的一段话：")]),s._v(" "),e("p",[e("strong",[s._v("“An ArrowFunction does not define local bindings for arguments, super, this, or new.target. Any reference to arguments, super, this, or new.target within an ArrowFunction must resolve to a binding in a lexically enclosing environment. ”")])]),s._v(" "),e("p",[s._v("直译为："),e("strong",[s._v('"'),e("code",[s._v("ArrowFunction")]),s._v(" 不为 "),e("code",[s._v("arguments")]),s._v(" ， "),e("code",[s._v("super")]),s._v(" ， "),e("code",[s._v("this")]),s._v(" 或 "),e("code",[s._v("new.target")]),s._v(" 定义本地绑定。 对 "),e("code",[s._v("ArrowFunction")]),s._v(" 中的 "),e("code",[s._v("arguments")]),s._v(" ， "),e("code",[s._v("super")]),s._v(" ， "),e("code",[s._v("this")]),s._v(" 或 "),e("code",[s._v("new.target")]),s._v(' 的任何引用都必须解析为词法作用域中的绑定。"')])]),s._v(" "),e("p",[s._v("也就是说，箭头函数内部不会定义 "),e("code",[s._v("this")]),s._v(" ，都是由它外部的词法作用域来决定的，也就是说，箭头函数的外部的 "),e("code",[s._v("this")]),s._v(" 指向的是谁，那箭头函数内部的 "),e("code",[s._v("this")]),s._v(" 指向的也是谁。")]),s._v(" "),e("p",[s._v("回到这个例子，我们知道至始至终，无论你套多少层箭头函数，"),e("code",[s._v("this")]),s._v(" 都是指向 "),e("code",[s._v("Foo")]),s._v(" 里面的 "),e("code",[s._v("this")]),s._v(",那"),e("code",[s._v("Foo")]),s._v(" 里面的 "),e("code",[s._v("this")]),s._v(" 根据我们之前的例子可以知道，就是指向了 "),e("code",[s._v("window")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"%E5%9B%9B.%E6%9C%80%E5%90%8E"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#%E5%9B%9B.%E6%9C%80%E5%90%8E","aria-hidden":"true"}},[s._v("#")]),s._v(" 四.最后")]),s._v(" "),e("p",[s._v("欢迎大家关注"),e("a",{attrs:{href:"https://juejin.im/user/585a2f52128fe10069ba1b95/posts"}},[s._v("我的掘金专栏")]),s._v("，后期也会更新更多优质的内容~\n有任何问题，欢迎理性和友好的讨论~")]),s._v(" "),e("p",[s._v("题图来自 "),e("a",{attrs:{href:"https://unsplash.com/"}},[s._v("unsplash")])])])}]},_=e("VU/8")(null,v,!1,null,null,null);t.default=_.exports}});
//# sourceMappingURL=5.e36a60edb99b8c10d0d5.js.map